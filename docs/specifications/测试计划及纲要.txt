博客园移动客户端测试计划及总纲1.0

李欣泽 20171025

零、Bug格式解释
本项目中检测出的bug均按照以下形式提出，一个合法的bug应包含以下几项：
（1）问题
即程序出错的具体表现。
（2）程序错误
导致错误输出的代码层面的直接问题。
（3）错误原因
导致错误输出的代码层面的根本问题。
（4）复现步骤
将bug的复现步骤罗列。

一个合法bug的例子：
（1）问题
求解无解数独会出现错误输出“puzzle solved”。
（2）程序错误
回溯求解并无问题。
（3）错误原因
未在求解之前对puzzle是否为合法数独进行检查，导致数独题面会在同一行或列或宫出现相同数字，导致回溯算法按照合法数独题面进行求解。
（4）复现步骤
cmd下执行"sudoku.exe -s puzzle.txt"（并附上puzzle.txt内容）

一、测试计划

测试分为开发过程中的测试和开发初步完成后的测试，下面分别来讲：

・开发过程中的测试
开发过程中的测试初步定为黑白箱混合测试，初步测试使用黑箱测试思想，即从代码的行为层面，而非代码的结构进行测试，根据代码实现的功能以及开发人员给出的功能说明进行测试。在“黑箱测试”找到一定的bug后，对代码的结构会有一定的了解，这时应用“白箱测试”思想，针对代码中的具体数据结构编写针对性的测试用例，这部分会对代码的边界处理以及内存处理等部分进行进一步测试。因为这部分对代码的依赖较大，所以1.0版本只简略介绍测试思想，具体测试计划视实际情况而定。

・开发初步完成的测试
开发初步完成后将对软件功能以及非功能层面进行测试，下面分别来讲：

* 功能测试

单元测试――开发人员完成，在最基本的功能以及参数上验证程序的正确性。
模块测试――对模块的功能进行验证。
集成测试――对不同开发人员提交的有依赖关系的功能模块进行验证。
场景测试――验证某几个模块是否可以完成特定的用户场景。
系统测试――对整个系统功能进行测试。
外部软件测试――在实际环境下对软件功能进行全面测试。

其中系统测试以及外部软件测试对代码的依赖不大，现列出部分测试项目，随时更新：

1、用户登录、注册的测试。
2、对用户信息与班级博客之间的切换进行测试。
3、对用户权限和用户操作的匹配性进行测试。
4、对班级博客的显示，排列等功能进行测试。
5、对回复提醒的功能进行测试。

* 非功能测试

压力测试――软件最多用户是多少？最小运行内存是多少？
效能测试――软件的最差效率是怎样的，是否影响数据同步？
稳定性测试――测试软件是否有频繁崩溃现象，与其他软件一同运行是否稳定，最多与多少软件同时运行？
可访问性测试――是否对不同用户群体提供了支持。
兼容性测试――是否可以跨平台运行。
易用性测试――是否提供了足够的使用说明。
安全性测试――是否存在内存泄漏，数据是否易于获取，权限是否容易修改，是否抵御基本攻击手段。

二、阶段测试

・冒烟测试
对上一阶段开发进行全面的测试，确保现阶段代码不存在bug时才可以进行下一部分开发。视情况而定，若bug可以确定在某一功能相对独立可控的模块内，相对部分的开发人员可以进行下一阶段开发，但要在bug修复以及回归测试完成后才可以签入。初步定为一周一次，暂定为每周周日。

・bug bash
全体人员对目前开发的项目代码进行“bug扫荡”活动，暂定为两周一次，时间暂定为周五或者周六。

三、个人职责

・开发人员
1、将代码提交给测试人员时要提交一份简略的功能说明文档，要较为准确的概括代码的功能以及实现结构，这部分不用特别详细，简要介绍即可。
2、签入代码时必须得到测试人员许可。

・测试人员
1、针对每段代码进行的测试用例都要签入test分支，分支下存有每次的测试用例，这样逐步建立起用例集。
2、向开发人员反馈bug时需严格按照零部分的规定进行编写。
3、在每个bug修改后，必须进行回归测试，用例从用例集中提取。